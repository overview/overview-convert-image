#!/bin/bash

set -e
#set -x

MIME_TYPE=$(file -b input.blob --mime-type)
THUMBNAIL_FILENAME=0-thumbnail.png
case "$MIME_TYPE" in
  image/png)
    ;;
  image/jpeg)
    THUMBNAIL_FILENAME=0-thumbnail.jpg
    ;;
  **)
    echo "Unhandled image type: $MIME_TYPE"
    exit 0 # We finished successfully, outputting a great error message
    ;;
esac

generate_thumbnail() {
  cmd="convert input.blob"
  if convert input.blob profile.icc 2>/dev/null; then
    # Convert to sRGB
    cmd="$cmd -profile profile.icc -profile /usr/share/color/icc/colord/sRGB.icc"
  fi
  # Remove transparency
  cmd="$cmd -background white -alpha remove -alpha off"
  # Strip other PNG chunks
  cmd="$cmd -define png:include-chunk=none"
  # Resize and strip color profile
  cmd="$cmd -thumbnail 700x700>"
  # Output
  cmd="$cmd $THUMBNAIL_FILENAME"

  $cmd
}
generate_thumbnail

LANG_2LETTER_JSON=$(echo "$1" | jq '.languageCode')
case "$LANG_2LETTER_JSON" in
  '"ar"') LANG_3LETTER="ara" ;;
  '"ca"') LANG_3LETTER="cat" ;;
  '"cs"') LANG_3LETTER="ces" ;;
  '"de"') LANG_3LETTER="deu" ;;
  '"en"') LANG_3LETTER="eng" ;;
  '"fr"') LANG_3LETTER="fra" ;;
  '"it"') LANG_3LETTER="ita" ;;
  '"nl"') LANG_3LETTER="nld" ;;
  '"no"') LANG_3LETTER="nor" ;;
  '"pt"') LANG_3LETTER="por" ;;
  '"ru"') LANG_3LETTER="rus" ;;
  '"es"') LANG_3LETTER="spa" ;;
  '"sv"') LANG_3LETTER="swe" ;;
  **)
    echo "Unhandled languageCode: $LANG_2LETTER_JSON"
    exit 0 # We finished successfully, outputting a great error message
    ;;
esac

# Remove alpha channel, if it exists.
if [ "$(file input.blob --mime-type --brief)" = "image/png" ]; then
  mogrify input.blob -background white -alpha remove -alpha off
fi

if [ "$(echo "$1" | jq '.wantOcr')" = 'true' ]; then
  echo "$1" | jq '{ filename: .filename, languageCode: .languageCode, wantOcr: false, wantSplitByPage: false, contentType: "application/pdf", metadata: (.metadata + { "isFromOcr": true }) }' > 0.json
  # OMP_THREAD_LIMIT: disable multithreading. Kubernetes is expecting us to
  # stay on one CPU.
  OMP_THREAD_LIMIT=1 tesseract input.blob 0 -l "$LANG_3LETTER" --psm 1 quiet pdf txt
  mv 0.pdf 0.blob
else
  touch 0.txt
  echo "$1" | jq '{ filename: .filename, languageCode: .languageCode, wantOcr: false, wantSplitByPage: false, contentType: "application/pdf", metadata: .metadata }' > 0.json
  img2pdf input.blob > 0.blob
fi
